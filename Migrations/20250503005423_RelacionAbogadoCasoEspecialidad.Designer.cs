// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jham.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250503005423_RelacionAbogadoCasoEspecialidad")]
    partial class RelacionAbogadoCasoEspecialidad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jham.Models.Abogado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Abogados");
                });

            modelBuilder.Entity("Jham.Models.Caso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CitaId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoCaso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CitaId")
                        .IsUnique();

                    b.ToTable("Casos");
                });

            modelBuilder.Entity("Jham.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbogadoId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoCita")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("interval");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId2")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AbogadoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId2");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Jham.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CasoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CasoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Jham.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreEspecialidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Jham.Models.Rel_AbogadoCaso", b =>
                {
                    b.Property<int>("AbogadoId")
                        .HasColumnType("integer");

                    b.Property<int>("CasoId")
                        .HasColumnType("integer");

                    b.HasKey("AbogadoId", "CasoId");

                    b.HasIndex("CasoId");

                    b.ToTable("Rel_AbogadoCasos");
                });

            modelBuilder.Entity("Jham.Models.Rel_AbogadoEspecialidad", b =>
                {
                    b.Property<int>("AbogadoId")
                        .HasColumnType("integer");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("integer");

                    b.HasKey("AbogadoId", "EspecialidadId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Rel_AbogadoEspecialidades");
                });

            modelBuilder.Entity("Jham.Models.Retroalimentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("integer");

                    b.Property<int>("CasoId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CasoId");

                    b.ToTable("Retroalimentaciones");
                });

            modelBuilder.Entity("Jham.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Jham.Models.Abogado", b =>
                {
                    b.HasOne("Jham.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Jham.Models.Caso", b =>
                {
                    b.HasOne("Jham.Models.Cita", "Cita")
                        .WithOne("Caso")
                        .HasForeignKey("Jham.Models.Caso", "CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Jham.Models.Cita", b =>
                {
                    b.HasOne("Jham.Models.Abogado", "Abogado")
                        .WithMany()
                        .HasForeignKey("AbogadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jham.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Jham.Models.Usuario", "Usuario2")
                        .WithMany()
                        .HasForeignKey("UsuarioId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Abogado");

                    b.Navigation("Usuario");

                    b.Navigation("Usuario2");
                });

            modelBuilder.Entity("Jham.Models.Documento", b =>
                {
                    b.HasOne("Jham.Models.Caso", "Caso")
                        .WithMany("Documentos")
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caso");
                });

            modelBuilder.Entity("Jham.Models.Rel_AbogadoCaso", b =>
                {
                    b.HasOne("Jham.Models.Abogado", "Abogado")
                        .WithMany("Casos")
                        .HasForeignKey("AbogadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jham.Models.Caso", "Caso")
                        .WithMany()
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abogado");

                    b.Navigation("Caso");
                });

            modelBuilder.Entity("Jham.Models.Rel_AbogadoEspecialidad", b =>
                {
                    b.HasOne("Jham.Models.Abogado", "Abogado")
                        .WithMany("Especialidades")
                        .HasForeignKey("AbogadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jham.Models.Especialidad", "Especialidad")
                        .WithMany("Abogados")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abogado");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("Jham.Models.Retroalimentacion", b =>
                {
                    b.HasOne("Jham.Models.Caso", "Caso")
                        .WithMany("Retroalimentaciones")
                        .HasForeignKey("CasoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caso");
                });

            modelBuilder.Entity("Jham.Models.Abogado", b =>
                {
                    b.Navigation("Casos");

                    b.Navigation("Especialidades");
                });

            modelBuilder.Entity("Jham.Models.Caso", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Retroalimentaciones");
                });

            modelBuilder.Entity("Jham.Models.Cita", b =>
                {
                    b.Navigation("Caso")
                        .IsRequired();
                });

            modelBuilder.Entity("Jham.Models.Especialidad", b =>
                {
                    b.Navigation("Abogados");
                });
#pragma warning restore 612, 618
        }
    }
}
